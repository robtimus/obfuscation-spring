<html>
<head>
  <title>Obfuscators</title>
  <link rel="stylesheet" href="css/highlight.css" />
</head>
<body>
<div class="section">
  <h2>Obfuscators</h2>
  <p>The properties described in <a href="properties.html">Properties</a> can be reused with a different prefix to auto-configure other obfuscators with the following steps:</p>
  <ul>
    <li>Expose a bean of type <a href="apidocs/com/github/robtimus/obfuscation/spring/boot/autoconfigure/ObfuscatorProperties.html">ObfuscatorProperties</a>.
        Make sure it's annotated with <a href="https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/context/properties/ConfigurationProperties.html">@ConfigurationProperties</a> with a unique prefix.
        Spring Boot should ensure that the <code>ObfuscatorProperties</code> object is validated.</li>
    <li>Provide an <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/AutowireCapableBeanFactory.html">AutowireCapableBeanFactory</a>.</li>
    <li>Call <a href="apidocs/com/github/robtimus/obfuscation/spring/boot/autoconfigure/ObfuscatorProperties.html#createObfuscator-org.springframework.beans.factory.config.AutowireCapableBeanFactory-">createObfuscator</a> on the <code>ObfuscatorProperties</code> instance to create an obfuscator.</li>
    <li>Use a subclass of <a href="apidocs/com/github/robtimus/obfuscation/spring/boot/autoconfigure/ObfuscatorPropertiesCondition.html">ObfuscatorPropertiesCondition</a> in combination with <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Conditional.html">@Conditional</a> to only auto-configure the obfuscator conditionally.</li>
  </ul>
  <p>For an example, see <a href="https://github.com/robtimus/obfuscation-spring/blob/master/obfuscation-spring-boot-starter/src/main/java/com/github/robtimus/obfuscation/spring/boot/autoconfigure/ObfuscatorAutoConfiguration.java">ObfuscatorAutoConfiguration.java</a>.</p>

  <h3>Nesting obfuscators</h3>
  <p>It's possible to nest <code>ObfuscatorProperties</code> in another auto-configuration properties class. Make sure that the root properties class of the structure containing the <code>ObfuscatorProperties</code> instances is annotated with <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/validation/annotation/Validated.html">@Validated</a>,
     and each occurrence of <code>ObfuscatorProperties</code> (including in lists or maps) is annotated with <a href="https://jakarta.ee/specifications/platform/11/apidocs/jakarta/validation/valid">@Valid</a>.
     This will ensure that the <code>ObfuscatorProperties</code> instances are in a consistent state.</p>
</div>
</body>
</html>
